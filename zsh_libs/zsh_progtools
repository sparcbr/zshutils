VERSION=1.0.0
#lazyload=pretty,tags,finderror
alias jtags='find . -type f -iregex ".*\.js$" -not -path "./node_modules/*" -exec jsctags {} -f \; | sed '"'"'/^$/d'"'"' | LANG=C sort > tags'
alias pytags="ctags -R --python-kinds=-i ."
alias diff_ignore_space="diff --ignore-space-change --ignore-tab-expansion --ignore-trailing-space --ignore-blank-lines"

[[ -v comp ]] || typeset -ga comp

# Added 2019-12-19 12:43
function pretty()
{
	local F Fname f files args prettyF tmpBasePath basePath baseName _s
	#zparseopts -D -M - 
	basePath=$(git root)

	#@TODO specify extension.. and have a default
	#@TODO if any dirs are given, add a file glob and use them below
	files=($(prettier -l "$@"))
	glist=($(git ls-files $files))
	
	# non git files are after git files
	for f in $glist ${files:|glist}; do
		F=$(getfullpath -r $basePath $f)
		if [[ ${F:0:1} == '/' ]]; then
			#F=$(getfullpath -r . $f)
			techo TODO skipped $f
			continue
		fi
		baseName=$(basename $basePath)
		tmpBasePath=$TMP/$baseName
		prettyF=$tmpBasePath/$F.pretty
		if [[ ! -f $prettyF || ! -s $prettyF || $f -nt $prettyF ]]; then
			techo "$f => \$TMP/$baseName/$F.pretty"
			dir=$(getpath $prettyF)
			[[ -d $dir ]] || mkdir -p $dir
			if prettier $f > $prettyF; then
				local _s=($(stat -L --printf='%s. ' $f $prettyF))
				if ((_s[2]==0)); then

				fi
				if ((_s[1]/_s[2]>1.1)); then
					confirm "$prettyF seems corrupted. Skip" && continue
				fi
			else
				techo "($?) Prettier failed."
				continue
			fi
		fi
		while ! cmp --quiet $f $prettyF; do
			diff -u --ignore-space-change $f $prettyF | head -n 20
			(($pipestatus[1]==0)) && techo -c head 'Only space changes'

			local _opt
			if chooser --simple -f1 -v _opt --use-keys 'S' "Save changes to $F" \
				'M' 'Meld files' 'D' 'Diff'
			then
				case $_opt in
					Meld)
						meld $f $prettyF
						;;
					Save)
						cp $prettyF $f
						;;
					Diff)
						diff -u $f $prettyF
						;;
					*)
						;;
				esac
				cmp --quiet $f $prettyF && touch $prettyF
			else
				if (($?==130)); then
					break
				else
					return $?
				fi
			fi
		done
	done
}

function finderror()
{
	errline=`tail /var/log/apache2/error.log |  grep -e "PHP \(Parse\|Fatal\|Warning\|Notice\)" | tail -n1`
	str=`echo $errline| sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g'`
	linenum=`echo $str | sed 's/.*line \([0-9]*\).*$/\1/'`
	filename=`echo $str | sed 's/.*\(\/media\/sparc\/xdata\/[^ ]*\).*$/\1/'`
	echo $filename
	echo $linenum
	#v "$filename:$linenum"
}

function tags()
{
	local lang args excludePatterns exclude
	zparseopts -lang:=lang -exclude:=exclude

	if (($#)) && [[ ! -f $1 && -z $lang ]]; then
		lang=$1
		shift
	elif [[ -n $lang[2] ]]; then
		lang=$lang[2]
	else
		chooser -v lang --simple --use-keys 'J' 'Javascript' 'P' 'PHP' 'Y' 'Python' 'S' 'Shell' || cancel
	fi

	explode -v excludePatterns "${(@)exclude[2]}" ','

	args=("$@")
	case ${(L)lang} in
		javascript|js)
			type jsctags >/dev/null || npm install -g git+https://github.com/ramitos/jsctags.git
			run find . -type f -iregex ".*\.js$" -not -path "./node_modules/*" \
				-exec jsctags {} -f \; | sed '/^$/d' | LANG=C sort > tags
			;;
		php)
			excludePatterns+=('vendor/*')
			#@TODO box
			(($#args)) || {
				args=(v?(N) *.php(N))
				(($#args)) || args=(.)
			}

			run phpctags -R --exclude=$^excludePatterns $args
			;;
		python|py)
			run ctags -R --python-kinds=-i .
			;;
		shell|sh)
			run ctags --language-force=Sh -R "${(@)args:-.}"
			;;
		*)
			techo -c err "Unsupported language: $lang"
			;;
	esac
}

# Added 2020-01-25 21:10
function vreplace()
{
	local files replace whole pattern
	zparseopts -D -M - s:=pattern w=whole r:=replace

	files="$@"
	(($#pattern)) && pattern=$pattern[2]
	if (($#whole)); then
		pattern="\<$pattern\>"
	fi
	(($#replace)) && replace=$replace[2]

	v "+arg | arg" "+argdo %s/\<$word\>/$replace/gce | update"
}

# Added 2020-04-02 17:17
function phpcheck()
{
	local args=('.') report=phpcs73.log
	(($#)) && { report=$1; shift }
	(($#)) && args=("$@")
	run phpcs -p --colors --extensions=php --standard=PHPCompatibility --report-full=$report --runtime-set testVersion 7.3 $args
}
