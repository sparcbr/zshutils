VERSION=1.0.5

setopt nomultios

function getfilename()
{
	echo "${1:t}"
}

function getfullpath()
{
	local relative
	zparseopts -D - r:=relative
	[[ -n $relative ]] && type realpath >/dev/null &&
		realpath --relative-base=${relative[2]#=} $1 2>/dev/null || echo "${1:P}"
}
function getpath()
{
	echo "${1:h}"
}

# ${file%%.old}
function getext()
{
	# echo "${1##*.}"
	echo "${1:e}"
}

function getfilenoext()
{
	echo "${1:t:r}"
}

function isDir()
{
	[[ -d $1 ]]
}

function isEmptyDir()
{
	local glob=("$1"(N/F))
	[[ -z $glob ]]
}

function noext()
{
	if [[ -n $2 ]]; then
		echo "${1%%.$2}"
	else
		echo "${1:r}"
	fi
}

# Added 2019-04-15 18:36 @TODO
function replace()
{
	local s r
	s=$1 ; r=$2 ; shift 2
	sed -i bak -e s/$1/$2/g "$@"
}

#@TODO
function backup()
{
	local sudo=""
	[[ "$1" == "-s" ]] && { shift; sudo='-s' }
	[[ -n "$2" ]] && {
		run $sudo cp "$1" "$2/$(getfilename "$1").bkup"
	} || run $sudo cp "$1" "$1.bkup"
}

#@TODO
function rename()
{
	local name dir file
	[[ "$1" == '-s' ]] && { shift; sudo='-s' }
	name="$(getfilename "$1")"
	dir="$(getpath "$1")"
	#usr/lib/arm-linux-gnueabihf/libXpm.so.4.11.0
	#usr/lib/arm-linux-gnueabihf/libXtst.so.6.1.0
	[[ -f "$1" || -d "$1" ]] || { color "$1 doesn't exist or no file permission"; return 1 }
	#file=$(dialog --title "Rename" --yes-label Rename --output-fd 1 --inputbox "Rename $1 to: " 10 120 "$name")
	file="$(input -p "Remame \"${C[warn]}$1${C[head]}\" to" $name)" || return $?
	#read "file?Remame \"$1\" to" $name || return $?
	run $sudo mv "$1" "$dir/$file"
}

# Added 2019-05-03 16:50
function syncDirs()
{
	local integer i n
	local src targets dir data rsArgs checksum arg
	local quiet sudo ignores dry extraArgs
	local files stat name
	typeset -a src targets rsArgs extraArgs files
	zparseopts -D -M - q=quiet s=sudo i:=ignores d=dry t:=targets c=checksum

	[[ -z "$sudo" ]] && sudo='-S'
	[[ $# -ge 2 ]] || abort 1 "usage: $0 source1 [.. sourceN] target1[,target2]"
	
	n=$#
	i=1
	for arg; do
		if [[ ${arg:0:1} = - ]]; then # option parameter
			extraArgs+=($arg)
		else # sources
			src+=($arg)
		fi
		((i++))
	done
	targets=${src: -1}
	targets=($(explode $targets ','))
	src[$#src]=()

#	if [[ -n "$1" ]]; then
#		targets="${@: -1}"
#		src=("${@:1:-1}")
#	else
#		src=($(box get backupdirs))
#	fi
#	if [[ -z "$targets" ]]; then
#		targets="$(input "Enter target directory")" || abort $?
#	fi

	for ((n=1; n<=$#src; n++)); do
		if isDir "${src[$n]}"; then
			if [[ -f "${src[$n]}/rsync.ignore" ]]; then
				rsArgs+=(--exclude-from="${src[$n]}/rsync.ignore")
			fi
			[[ ${src[$n]: -1} != / ]] && src[$n]+=/
		fi
	done
	[[ -n $checksum ]] && checksum=(-c --no-times)
	rsArgs=('-hirl' $checksum --exclude=.osync_workdir --exclude='backup*' --exclude='*.local' --exclude='.bsync*' "${extraArgs[@]}")
	[[ -n $ignores ]] && rsArgs+=(--exclude-from="${ignores[2]}")
	for dir in $targets; do
		if [ ! -d "$dir" ]; then
			if [ ! -e "$dir" ]; then
				confirm "dir $dir doesn't exist. Create" && run $sudo mkdir $dir
			else
				techo -c err "$dir is a file"
			fi
		fi
		if [ -d "$dir" ]; then
			data="$(run $sudo rsync -n ${rsArgs[@]} "$src[@]" "$dir")"
			if [ -n "$data" ]; then
				echo "$data"
				confirm "Do it" && run $sudo rsync "$rsArgs[@]" "$src[@]" "$dir" && run sync
			fi

			data="$(run $sudo rsync -n --delete --existing --ignore-existing \
				${rsArgs[@]} "$src[@]" "$dir")"

			if [[ -n "$data" ]]; then
				techo -c warn "Deletions:"
				n=0
				echo "$data" | while read stat name; do
					echo "$dir/$name ${C[red]}❌$C_"
					files+=($dir/$name)
					((n++))
				done
				confirm -c warn "Delete these $n files" || continue
				#@TODO rm $(chooser "$files[@]")
				run $sudo rsync --delete --existing --ignore-existing "$rsArgs[@]" "$src[@]" "$dir"
				run sync
			fi
		fi
	done
}

# Added 2019-01-22 18:07:09 @TODO
function syncIhm()
{
	( cd $HOME/PeD/android && {
		syncDirs -c -i $CFG/android.ignore $TREADMILL \
			$CLOUD_APPS/Treadmill,/m/home/inbramed/android/Treadmill
		syncDirs -c -i $CFG/android.ignore $CICLOERGOMETER \
			$CLOUD_APPS/Cicloergometer,/m/home/inbramed/android/Cicloergometer
	  }
	)
}

# Added 2019-02-20 09:23:39 @TODO
function boxStart()
{
	include boxes
	box start
}


# Added 2019-06-05 16:55
function attributeSync()
{
	local stats name dir1 dir2 rsArgs
	[[ $# -eq 2 ]] || return 10
	dir1=$1 ; dir2=$2
	[[ -d $dir1 && -d $dir2 ]] || return 127
	shift 2 ; rsArgs=${@:-au}
	while read stats name; do
		#echo stat=$stats name=$name ;
		[[ $stats[5] == t ]] && e touch --reference "$dir1/$name" $dir2/$name
		[[ $stats[6] == p ]] && e chmod --reference="$dir1/$name" $dir2/$name
		[[ $stats[7] == o || $stats[8] == g ]] && e chown --reference="$dir1/$name" $dir2/$name
	done < <(run -s rsync -ni $rsArgs $dir1/ $dir2)
}
