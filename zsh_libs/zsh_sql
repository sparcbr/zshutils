VERSION=1.0.3
# databases data dir
DB_DATA_DIR=/var/lib/mysql

# get last modification time of dbname(s)
# usage: dbtstamp dbname
function dbtstamp()
{
	usedb $1
	sudo ls -lrt --time-style=+"%Y-%m-%d %H:%M:%S" $DB_DATA_DIR/$db/ | \
		awk '{print $6,$7,$8}' | sort --numeric-sort
}

# Receive a list and the default selected item.
# Put the default item on the first position.
# @param string selected
# @param string[] list
function mklist()
{
	local list first
	first=$1
	list=($1)
	shift
	for i; do [[ "$i" != "$first" ]] && list+=($i) ; done
	echo "${list[@]}"
}
sqlPass='my7866'
# execute mysql command
# sql [-d dbname] [-f file.sql] SELECT ...
function sql()
{
	local file name sql nodb verbose pass silent
	zparseopts -D - f:=file d:=name n=nodb v=verbose p:=pass s=silent
	pass="${pass[2]:-$sqlPass}"
	[[ -n $nodb ]] || usedb $name[2]
	if [[ -n $file ]]; then
		file=$file[2]
		# [[ $file size greater than X lines ]] && 
			#  run mysqlimport -u $user -p$pass ql $db
			#  return
		sql=$(<$file)
	else
		sql="$*"
	fi

	mysql $silent -u root -p$pass -e $sql $db
}

function isdb()
{
	[[ -n "$1" ]] && [[ -d "$DB_DATA_DIR/$1" ]]
}

function usedb()
{
	#${${dbname:-$(proj get dbname)}}
	[[ $1 == '-s' ]] && { db= ; shift }
	if [ $# -gt 0 ]; then
		isdb $1 && db=$1 || abort "$1: database not found"
	elif [[ -z $db ]]; then
		db=$(chooser $(mklist $DBNAME $(dblist)))
	fi
}
function dblist()
{
	sql -n 'show databases' | tail -n +2
}

function istable()
{
	[[ -n $db ]] || return 
	sql "describe $1" >/dev/null 2>&1
}
function tablelist()
{
	sql 'show tables' | tail -n +2
}

function gettable()
{
	istable $1 && echo $1 && return
	echo $(zsh-select "$1" $(tablelist))
}

function tableshow()
{
	local tblname args t result
	if [[ "$1" == "-d" ]]; then
		usedb $2
		shift 2
	else
		usedb
	fi
	[[ "$1" == '-t' ]] && { shift; t=1 }
	tblname=$(gettable $1)
	if [[ -n "$t" ]]; then
		sql "describe $tblname"
	else
		echo $(tail -n +2 <(sql "show create table $tblname") | cut -f2-)
	fi
}

# shows a list of databases and their sizes
# usage: dbsize mydatabase
function dbsize()
{
	usedb "$@"
	sql -n 'SELECT table_name AS "Table Name", ROUND(((data_length + index_length) / 1024 / 1024), 2) AS "Size in (MB)" FROM information_schema.TABLES WHERE table_schema = "'$db'" ORDER BY (data_length + index_length)'
}

# Added 2019-03-23 23:36
function sqldbdump()
{
	usedb "$@"
	if [[ -f "$db.sql.bkup" ]]; then
		techo -c warn "Saving backup $db.sql.bkup"
		mv $db.sql $db.sql.bkup
	fi
	mysqldump $db --no-data --single-transaction --skip-add-drop-table | \
		sed -e 's/ AUTO_INCREMENT=[0-9]*\b//g' | \
		grep -v '^\/\*![0-9]\{5\}.*character_set_client.*\/;$' > $db.sql
}
DBNAME=idiomus
